#!/bin/sh

# FIXME: Do multiple queues
# FIXME: Handle Wireless
# FIXME: Create better abstractions
# FIXME: Use a configuration file

percent=92
txqueuelen=100
bytelimit=64000

debloat_ethernet() {

speed=`cat /sys/class/net/$IFACE/speed`
mtu=`ip -o link show dev $IFACE | awk '{print $5;}'`
bytelimit=`expr $mtu '*' 3`

[ $speed -lt 1001 ] && { percent=94; txqueuelen=100; }
if [ $speed -lt 101 ] 
then
	percent=92; 
	txqueuelen=50; 

fi

#[ $speed -lt 11 ] && { percent=90; txqueuelen=20; }

newspeed=`expr $speed \* $percent / 100`

modprobe sch_cbq
modprobe sch_sfq
modprobe sch_qfq 

# Doing this twice kicks the driver harder. 
# Sometimes it gets stuck otherwise

ifconfig $IFACE txqueuelen $txqueuelen
tc qdisc del dev $IFACE root
ifconfig $IFACE txqueuelen $txqueuelen
tc qdisc del dev $IFACE root

if [ -e /sys/class/net/$IFACE/queues/tx-0/byte_queue_limits ]
then
	for i in /sys/class/net/$IFACE/queues/tx-*/byte_queue_limits
	do
		echo $bytelimit > $i/limit_max
	done

	tc qdisc add dev $IFACE handle 1 root sfq
else

# try to fake it without BQL

tc qdisc add dev $IFACE root handle 1 cbq bandwidth ${newspeed}mbit avpkt 1000
tc qdisc add dev $IFACE parent 1: handle 10 sfq

fi

}

debloat_wireless() {

# HAH. Like any of this helps wireless

exit

percent=92
txqueuelen=100
speed=`cat /sys/class/net/$IFACE/speed`
[ $speed -lt 1001 ] && { percent=94; txqueuelen=100; }
[ $speed -lt 101 ] && { percent=93; txqueuelen=50; }
[ $speed -lt 11 ] && { percent=90; txqueuelen=20; }

newspeed=`expr $speed \* $percent / 100`

#echo $newspeed

modprobe sch_cbq
modprobe sch_sfq
modprobe sch_qfq

# Just this much would help. If wireless had a 'speed'
ifconfig $IFACE txqueuelen $txqueuelen

}

if [ -h /sys/class/net/$IFACE/phy80211 ]
then
	debloat_wireless
else
	debloat_ethernet
fi

